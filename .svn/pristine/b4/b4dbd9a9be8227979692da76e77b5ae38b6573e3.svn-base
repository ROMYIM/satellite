package com.yim.satellite.controller;
/**
*@author:   yim
*@date:  2018年3月26日上午9:38:05
*@description:   
*/

import java.util.List;

import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RestController;
import org.springframework.web.servlet.ModelAndView;

import com.yim.satellite.config.ScheduleConfig;
import com.yim.satellite.domain.db.LogBean;
import com.yim.satellite.domain.model.ResponseMessageBean;
import com.yim.satellite.service.ILogService;

@RestController
public class HomeController {
	private static final Logger LOGGER = LoggerFactory.getLogger(HomeController.class);
	
	@Autowired
	private ScheduleConfig scheduleConfig;
	
	@Autowired
	private ILogService logService;
	
	@RequestMapping("/")
	public ModelAndView index(ModelAndView modelAndView) {
		List<LogBean> logs = logService.findAllLogs(0, 20);
		modelAndView.addObject("timingTime", scheduleConfig.getTimingTime());
		modelAndView.addObject("intervalTime", scheduleConfig.getIntervalTime());
		modelAndView.addObject("logList", logs).setViewName("index");
		return modelAndView;
	}
	
	@RequestMapping(value = "findLogs", method = RequestMethod.GET)
	public List<LogBean> findLogs(String tableName, String targetDb, int pageNum) {
		LOGGER.info(String.valueOf(pageNum));
		if (pageNum < 0) {
			pageNum = 0;
		}
		if (tableName.length() == 0 && targetDb.length() == 0) {
			return logService.findAllLogs(pageNum, 20);
		} else {
			return logService.findLogsByTableAndTarget(tableName, targetDb, pageNum, 20);
		}
	}
	
	@RequestMapping(value = "setCron", method = RequestMethod.POST)
	public ResponseMessageBean setCron(String timingTime, String intervalTime) {
		LOGGER.info("定时时间:" + timingTime);
		LOGGER.info("间隔时间:" + intervalTime);
		ResponseMessageBean message =  new ResponseMessageBean();
		message.setMessage("操作失败");
		if (timingTime.length() > 0) {	
			if (scheduleConfig.startTimingTask(timingTime)) {
				message.setMessage("操作成功");
			}
		}
		if (intervalTime.length() > 0) {
			if (scheduleConfig.startIntervalTask(intervalTime)) {
				message.setMessage("操作成功");
			}
		}
		return message;
	}
}
